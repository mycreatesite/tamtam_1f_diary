@use '/src/assets/scss/variables' as val;

.ReactModal__Body--open,
.ReactModal__Html--open {
  overflow: hidden;
}


.openModal {
    position: fixed;
    width: calc(100% - 9vmin);
    max-width: calc(1024px - 2.5rem);
    bottom: 1rem;
    right: 1rem;
    @media (min-width: 600px) {
        right: auto;
    }
}
.btn-openModal {
    float: right;
    width: 4rem;
    height: 4rem;
    border-radius: 50%;
    border: 4px solid val.$textColor;
    padding: .5rem;
    font-weight: 700;
    transition: all .2s;
    background-color: rgba(val.$primary, .7);
    transform-origin: center;
    animation: rotate 10s linear infinite;
    span {
        display: block;
        &._text {
            display: none;
            @media (min-width: 600px) {
                display: block;
                margin-top: .25rem;
            }
        }
    }
    &:hover {
        background-color: val.$primary;
    }
    @keyframes rotate {
        100% {
            transform: rotate(360deg);
        }
    }
    @media (min-width: 600px) {
        width: 8rem;
        height: 8rem;
        border: 6px solid val.$textColor;
        background-color: rgba(val.$primary, .3);
    }
    @media (min-width: 1200px) {
        margin-right: -8rem;
    }
}

.searchInput {
    width: 100%;
    
    border-bottom: 2px solid val.$textColor;
    label {
        display: flex;
        flex-direction: column;
    }
    input {
        order: 1;
        padding: 1rem 0;
        + span {
            opacity: .5;
            font-weight: 700;
            transform: translateY(2.5rem) scale(1);
            transform-origin: left bottom;
            transition: .3s;
        }
        &::placeholder {
            color: transparent;
        }
        &:not(:placeholder-shown) + span, &:focus + span {
            transform: translateY(0) scale(.75);
            opacity: 1;
        }
    }
}

.btn-closeModal {
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 2rem;
    transition: transform .2s;
    transform-origin: center;
    &:hover {
        transform: scale(1.2);
    }
}

.modalWrapper{
    text-align: center;
    padding: 20px 0;
}

.modalSearchOverlay{
    z-index: 960;
    position: fixed;
    top: 0px;
    left: 0px;
    right: 0px;
    bottom: 0px;
    background-color: rgba(0, 0, 0, 0.75);
}
.modalSearchWindow{
    position: absolute;
    z-index: val.$z-modal;
    background: #fff;
    padding: 5rem 1rem;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 32px;
    outline: none;
    width: calc(100% - 2rem);
    max-width: 400px;
    max-height: 50vh;
    overflow: auto;
    @media (min-width: 600px) {
        padding: 5rem 2.5rem;
    }
    &::-webkit-scrollbar {
        width: .5rem;
    }
    &::-webkit-scrollbar-track {
    border-radius: .5rem;
    box-shadow: inset 0 0 4px rgba(val.$textColor, .1);
    }
    &::-webkit-scrollbar-thumb {
    background-color: rgba(val.$textColor, .5);
    border-radius: .5rem;
    box-shadow:0 0 0 1px rgba(255, 255, 255, .3);
    }
}


.result-outer {
    .result-inner__search {
        list-style: none;
        padding: 0;
        li a {
            display: flex;
            margin-top: 1rem;
            text-decoration: none;
        }
    }
    .result-inner__image {
        width: 5rem;
        height: 5rem;
        margin-right: 1rem;
        flex: 0 0 5rem;
        img {
            object-fit: cover;
            width: 100%;
            height: 100%;
            border-radius: 50%;
        }
    }
    .result-inner__res {
        margin-top: .5rem;
        margin-bottom: 2rem;
        font-size: .75rem;
        color: lighten(val.$textColor, 40);
    }
    .result-inner__content__title {
        font-weight: 700;
    }
}


.ReactModal__Overlay {
    opacity: 0;
    transition: opacity .3s ease-in-out;
}

.ReactModal__Overlay--after-open{
    opacity: 1;
}

.ReactModal__Overlay--before-close{
    opacity: 0;
}